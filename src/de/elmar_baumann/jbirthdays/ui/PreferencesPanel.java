package de.elmar_baumann.jbirthdays.ui;

import java.util.prefs.Preferences;
import javax.swing.SpinnerNumberModel;
import javax.swing.event.ChangeEvent;
import javax.swing.event.ChangeListener;

/**
 * @author Elmar Baumann
 */
public class PreferencesPanel extends javax.swing.JPanel {

    public static final String PROPERTY_DAYS_BEFORE = "daysBefore";
    public static final String PROPERTY_DAYS_AFTER = "daysAfter";
    private static final long serialVersionUID = 1L;
    private static final String KEY_BEFORE = "DaysBefore";
    private static final String KEY_AFTER = "DaysAfter";

    public PreferencesPanel() {
        initComponents();
        postInitComponents();
    }

    private void postInitComponents() {
        readPreferences();
        spinnerBefore.getModel().addChangeListener(daysBeforeAfterChangedListener);
        spinnerAfter.getModel().addChangeListener(daysBeforeAfterChangedListener);
    }

    private void readPreferences() {
        Preferences prefs = Preferences.userNodeForPackage(PreferencesPanel.class);
        SpinnerNumberModel beforeModel = (SpinnerNumberModel) spinnerBefore.getModel();
        SpinnerNumberModel afterModel = (SpinnerNumberModel) spinnerAfter.getModel();
        beforeModel.setValue(prefs.getInt(KEY_BEFORE, 7));
        afterModel.setValue(prefs.getInt(KEY_AFTER, 3));
    }

    private void writePreferences() {
        Preferences prefs = Preferences.userNodeForPackage(PreferencesPanel.class);
        SpinnerNumberModel beforeModel = (SpinnerNumberModel) spinnerBefore.getModel();
        SpinnerNumberModel afterModel = (SpinnerNumberModel) spinnerAfter.getModel();
        prefs.putInt(KEY_BEFORE, beforeModel.getNumber().intValue());
        prefs.putInt(KEY_AFTER, afterModel.getNumber().intValue());
    }

    public int getDaysBefore() {
        SpinnerNumberModel beforeModel = (SpinnerNumberModel) spinnerBefore.getModel();
        return beforeModel.getNumber().intValue();
    }

    public int getDaysAfter() {
        SpinnerNumberModel afterModel = (SpinnerNumberModel) spinnerAfter.getModel();
        return afterModel.getNumber().intValue();
    }

    private final ChangeListener daysBeforeAfterChangedListener = new ChangeListener() {
        @Override
        public void stateChanged(ChangeEvent e) {
            SpinnerNumberModel beforeModel = (SpinnerNumberModel) spinnerBefore.getModel();
            SpinnerNumberModel afterModel = (SpinnerNumberModel) spinnerAfter.getModel();
            Preferences prefs = Preferences.userNodeForPackage(PreferencesPanel.class);
            Object source = e.getSource();
            if (source == beforeModel) {
                firePropertyChange(PROPERTY_DAYS_BEFORE, prefs.getInt(KEY_BEFORE, 7), beforeModel.getNumber().intValue() );
            } else if (source == afterModel) {
                firePropertyChange(PROPERTY_DAYS_AFTER, prefs.getInt(KEY_AFTER, 3), beforeModel.getNumber().intValue() );
            }
            writePreferences();
        }
    };

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        labelBefore = new javax.swing.JLabel();
        spinnerBefore = new javax.swing.JSpinner();
        labelAfter = new javax.swing.JLabel();
        spinnerAfter = new javax.swing.JSpinner();

        labelBefore.setLabelFor(spinnerBefore);
        java.util.ResourceBundle bundle = java.util.ResourceBundle.getBundle("de/elmar_baumann/jbirthdays/ui/Bundle"); // NOI18N
        org.openide.awt.Mnemonics.setLocalizedText(labelBefore, bundle.getString("PreferencesPanel.labelBefore.text")); // NOI18N

        spinnerBefore.setModel(new javax.swing.SpinnerNumberModel(7, 1, 31, 1));

        labelAfter.setLabelFor(spinnerAfter);
        org.openide.awt.Mnemonics.setLocalizedText(labelAfter, bundle.getString("PreferencesPanel.labelAfter.text")); // NOI18N

        spinnerAfter.setModel(new javax.swing.SpinnerNumberModel(3, 1, 31, 1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelAfter)
                    .addComponent(labelBefore))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(spinnerBefore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerAfter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelBefore)
                    .addComponent(spinnerBefore, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelAfter)
                    .addComponent(spinnerAfter, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel labelAfter;
    private javax.swing.JLabel labelBefore;
    private javax.swing.JSpinner spinnerAfter;
    private javax.swing.JSpinner spinnerBefore;
    // End of variables declaration//GEN-END:variables

}
